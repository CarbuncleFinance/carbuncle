---
description: 
globs: 
alwaysApply: true
---
# Project Guidelines

## Documentation Structure

### Business Documentation
- [Business Requirements](mdc:docs/business/requirements) - Project overview and requirements
- [Business Concepts](mdc:docs/business/concepts) - Core concepts and architecture overview

### Technical Documentation
- [Blockchain Types](mdc:docs/technical/architecture/blockchain_types.md) - Blockchain protocol and chain type definitions
- [Wallet Connect Design](mdc:docs/technical/architecture/wallet_connect_design.md) - Wallet connection architecture
- [Component Design](mdc:docs/development/guidelines/component_design.md) - Component architecture and design patterns

### API Documentation
- [XRPL.js API](mdc:docs/technical/api/xrpljs) - XRPL.js library documentation in Japanese

## Documentation Guidelines for xrpl.js (Japanese)

- [01_introduction.md](mdc:docs/technical/api/xrpljs/01_introduction.md) - Overview, features, quickstart, and key links for xrpl.js (in Japanese)
- [02_client.md](mdc:docs/technical/api/xrpljs/02_client.md) - Japanese API reference for the Client class: methods, properties, usage notes

## i18n
- [i18n-guidelines](/Users/user/Projects/Carbuncle/carbuncle/docs/i18n-guidelines.md)

## Documentation Standards

### File Naming Convention
- Use kebab-case for file names
- Use `.md` extension for Markdown files
- Use `.mdc` extension for documentation index files

### Content Structure
- Start with a clear title (H1)
- Use appropriate heading levels (H1 -> H2 -> H3)
- Include a brief description at the beginning
- Use tables for structured data
- Include code examples where relevant

### Code Examples
- Use TypeScript for code examples
- Include comments for complex logic
- Follow project's coding standards


